name: Build and Release

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g., v1.0.0)'
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.platform.os }}-${{ matrix.platform.arch }}
    runs-on: ${{ matrix.platform.os-type }}
    strategy:
      matrix:
        platform:
          - os: linux
            os-type: ubuntu-latest
            arch: x86_64
            target: x86_64-unknown-linux-musl
            binary_name: ccost
          - os: darwin
            os-type: macos-latest
            arch: x86_64
            target: x86_64-apple-darwin
            binary_name: ccost
          - os: darwin
            os-type: macos-latest
            arch: aarch64
            target: aarch64-apple-darwin
            binary_name: ccost

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.platform.target }}

      - name: Install musl tools (Linux only)
        if: contains(matrix.platform.target, 'musl')
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.platform.target }}

      - name: Prepare binary
        shell: bash
        id: prepare_binary
        run: |
          mkdir -p dist
          cp target/${{ matrix.platform.target }}/release/${{ matrix.platform.binary_name }} dist/
          
          # Set binary name based on OS and architecture
          BINARY_NAME="ccost-${{ matrix.platform.os }}-${{ matrix.platform.arch }}"
          
          # Create both generic and platform-specific binaries
          cp dist/${{ matrix.platform.binary_name }} "dist/${BINARY_NAME}"
          echo "asset_paths=dist/${{ matrix.platform.binary_name }},dist/${BINARY_NAME}" >> $GITHUB_OUTPUT

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.prepare_binary.outputs.asset_paths }}
          fail_on_unmatched_files: true
          generate_release_notes: true
          body: |
            ## ccost ${{ github.ref_name }}

            ### Installation

            **One-line installer**:
            ```bash
            curl -sSf https://raw.githubusercontent.com/${{ github.repository }}/main/install.sh | sh
            ```

            **Manual Download**:
            Download the appropriate binary for your platform below and make it executable.

            ### Changes

            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for detailed changes.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}